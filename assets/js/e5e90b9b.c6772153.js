"use strict";(globalThis.webpackChunkdocs=globalThis.webpackChunkdocs||[]).push([[1192],{8261:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>i,contentTitle:()=>c,default:()=>d,frontMatter:()=>s,metadata:()=>a,toc:()=>l});var o=r(2540),t=r(3023);const s={title:"combine-coverage"},c=void 0,a={id:"merge-coverage/commands/combine-coverage",title:"combine-coverage",description:"Combines coverage from different test runner tools",source:"@site/docs/merge-coverage/commands/combine-coverage.mdx",sourceDirName:"merge-coverage/commands",slug:"/merge-coverage/commands/combine-coverage",permalink:"/frontend/docs/merge-coverage/commands/combine-coverage",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{title:"combine-coverage"},sidebar:"tutorialSidebar",previous:{title:"clear",permalink:"/frontend/docs/merge-coverage/commands/clear"},next:{title:"combine-reports",permalink:"/frontend/docs/merge-coverage/commands/combine-reports"}},i={},l=[{value:"API",id:"api",level:2},{value:"Optional Parameters",id:"optional-parameters",level:3},{value:"Usage",id:"usage",level:2},{value:"Combine coverage using the terminal",id:"combine-coverage-using-the-terminal",level:3},{value:"Combine coverage after running tests",id:"combine-coverage-after-running-tests",level:3}];function m(e){const n={code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.p,{children:"Combines coverage from different test runner tools"}),"\n",(0,o.jsx)(n.h2,{id:"api",children:"API"}),"\n",(0,o.jsx)(n.h3,{id:"optional-parameters",children:"Optional Parameters"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-sh",children:'# Custom Test runners (default: "jest,cypress")\n--tools=<string>\n--tools=<string,string>\n\n# Custom reports folder (default: "coverage-reports/reports")\n--folder=<string>\n--folder=<string,string>\n'})}),"\n",(0,o.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n",(0,o.jsx)(n.h3,{id:"combine-coverage-using-the-terminal",children:"Combine coverage using the terminal"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-sh",children:"# Option A - Default test runners\n$ merge-coverage combine-coverage\n\n# Option B - Custom test runners and default reports folder\n$ merge-coverage combine-coverage --tools=vitest,cypress\n\n# Option C - Custom test runners and custom reports folder\n$ merge-coverage combine-coverage --tools=vitest,cypress --folder=custom-folder/reports\n"})}),"\n",(0,o.jsx)(n.h3,{id:"combine-coverage-after-running-tests",children:"Combine coverage after running tests"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-json",children:'{\n  "devDependencies": {\n    "@jtmdias/merge-coverage": "x.y.z",\n  },\n  "scripts": {\n    "posttest": "merge-coverage combine-coverage --tools=vitest,cypress",\n  }\n}\n'})})]})}function d(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(m,{...e})}):m(e)}},3023:(e,n,r)=>{r.d(n,{R:()=>c,x:()=>a});var o=r(3696);const t={},s=o.createContext(t);function c(e){const n=o.useContext(s);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:c(e.components),o.createElement(s.Provider,{value:n},e.children)}}}]);