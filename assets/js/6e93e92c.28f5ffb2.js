"use strict";(globalThis.webpackChunkdocs=globalThis.webpackChunkdocs||[]).push([[327],{8334:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>m,frontMatter:()=>i,metadata:()=>p,toc:()=>l});var o=n(2540),r=n(3023);const i={title:"Polymorphic"},s=void 0,p={id:"js-utilities/typings/polymorphic-ref",title:"Polymorphic",description:"Creating polymorphic components.",source:"@site/docs/js-utilities/typings/polymorphic-ref.mdx",sourceDirName:"js-utilities/typings",slug:"/js-utilities/typings/polymorphic-ref",permalink:"/frontend/docs/js-utilities/typings/polymorphic-ref",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{title:"Polymorphic"},sidebar:"tutorialSidebar",previous:{title:"TupleToUnion",permalink:"/frontend/docs/js-utilities/typings/object-as-tuple"},next:{title:"Introduction",permalink:"/frontend/docs/merge-coverage/introduction"}},c={},l=[{value:"API",id:"api",level:2},{value:"Usage",id:"usage",level:3}];function a(e){const t={code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.p,{children:"Creating polymorphic components."}),"\n",(0,o.jsx)(t.h2,{id:"api",children:"API"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-typescript",children:'type PolymorphicComponentProps<C extends React.ElementType, Props = {}> = InheritableElementProps<\n    C,\n    Props & AsProp<C>\n>;\ntype PolymorphicRef<C extends React.ElementType> = React.ComponentPropsWithRef<C>["ref"];\ntype PolymorphicComponentPropsWithRef<\n    C extends React.ElementType,\n    Props = Record<string, unknown>,\n> = PolymorphicComponentProps<C, Props> & { ref?: PolymorphicRef<C> };\n'})}),"\n",(0,o.jsx)(t.h3,{id:"usage",children:"Usage"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-tsx",children:'import { PolymorphicRef, PolymorphicComponentPropsWithRef } from \'@jtmdias/js-utilities\';\n\ntype FlexProps<C extends React.ElementType> = PolymorphicComponentPropsWithRef<C, Props>;\ntype FlexComponent = <C extends React.ElementType = "p">(props: FlexProps<C>) => React.ReactElement | null;\n\nconst Flex: FlexComponent = React.forwardRef(\n    <C extends React.ElementType = "div">(htmlProps: FlexProps<C>, ref?: PolymorphicRef<C>) => {\n  ...\n}\n'})})]})}function m(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(a,{...e})}):a(e)}},3023:(e,t,n)=>{n.d(t,{R:()=>s,x:()=>p});var o=n(3696);const r={},i=o.createContext(r);function s(e){const t=o.useContext(i);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function p(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),o.createElement(i.Provider,{value:t},e.children)}}}]);